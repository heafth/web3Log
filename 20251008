内存中的字符串：
  1、先将这段内存拷贝到堆或者栈上；
  2、将变量的类型转换成 []byte 后并修改字节数据；
  3、将修改后的字节数组转换回 string；
  比如：s := "Hello"
       b := []byte(s)   // 把字符串复制到一个新的可写字节切片中
       b[0] = 'h'
       s2 := string(b)  // 再转回字符串
       fmt.Println(s2)  // 输出 "hello"
   当然也可以重新赋值的方式
声明字符串的两种方式
  1、标准字符串：使用双引号（"string"）表示，支持转义字符。
  2、原始字符串：使用反引号（`string`）表示，支持多行文本，内部的换行和特殊字符不需要转义。
   比如：
   str1 := "this is a string"
   str2 := `this is another string`
   用反引号写json的好处示例：
    json := `{"author": "draven", "tags": ["golang"]}`
 另外三点标准字符串即双引号字符串：（与java类似）
  1、标准字符串使用双引号表示开头和结尾；
  2、标准字符串需要使用反斜杠 \ 来逃逸双引号；
  3、标准字符串不能出现的隐式换行 \n；
